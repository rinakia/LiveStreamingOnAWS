{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","url","playing","stream","load","setState","played","ref","player","this","className","href","target","rel","controls","width","height","ListGroup","horizontal","Item","id","awsExports","mediaLiveConsole","Button","onClick","hls_manifest","size","variant","dash_manifest","cmaf_manifest","CardDeck","style","margin","Card","Header","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mSAsGeA,E,4MA/EbC,MAAQ,CACNC,IAAK,KACLC,SAAS,EACTC,OAAQ,U,EAGVC,KAAO,SAACH,EAAIE,GACV,EAAKE,SAAS,CACZJ,IAAIA,EACJE,OAAOA,EACPG,OAAQ,EACRJ,SAAS,K,EAIbK,IAAM,SAAAC,GACJ,EAAKA,OAASA,G,uDAGN,IAAD,SAC0BC,KAAKT,MAA9BC,EADD,EACCA,IAAKE,EADN,EACMA,OAAQD,EADd,EACcA,QAErB,OACE,yBAAKQ,UAAU,QACb,qDACA,iIACqG,uBAAGC,KAAK,kGAAkGC,OAAO,SAASC,IAAI,uBAA9H,+BADrG,KAIA,yBAAKH,UAAU,kBACf,kBAAC,IAAD,CACEH,IAAKE,KAAKF,IACVG,UAAU,eACVT,IAAKA,EACLC,QAASA,EACTY,UAAQ,EACRC,MAAM,OACNC,OAAO,UAIT,kBAACC,EAAA,EAAD,CAAWC,YAAU,GACnB,kBAACD,EAAA,EAAUE,KAAX,KAAgB,2BAAIhB,IACpB,kBAACc,EAAA,EAAUE,KAAX,CAAgBT,UAAU,OAAM,8BAAQT,KAG1C,2BACA,8CADA,uBAC+C,uBAAGmB,GAAG,OAAOT,KAAMU,WAAWC,iBAAkBV,OAAO,SAASC,IAAI,uBAApE,qBAD/C,2CAKA,kBAACU,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKpB,KAAKiB,WAAWI,aAAa,QAAQf,UAAU,UAAUgB,KAAK,KAAKC,QAAQ,WAAvG,eACA,kBAACJ,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKpB,KAAKiB,WAAWO,cAAc,SAASlB,UAAU,UAAUgB,KAAK,KAAKC,QAAQ,WAAzG,gBACA,kBAACJ,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKpB,KAAKiB,WAAWQ,cAAc,SAASnB,UAAU,UAAUgB,KAAK,KAAKC,QAAQ,WAAzG,gBAEA,kBAACG,EAAA,EAAD,CAAUC,MAAO,CAAEC,OAAQ,cACzB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,kBACA,kBAACjB,EAAA,EAAD,CAAWU,QAAQ,SACjB,kBAACV,EAAA,EAAUE,KAAX,KAAgB,uBAAGR,KAAK,qEAAqEC,OAAO,SAASC,IAAI,uBAAjG,0BAChB,kBAACI,EAAA,EAAUE,KAAX,KAAgB,uBAAGR,KAAK,2EAA2EC,OAAO,SAASC,IAAI,uBAAvG,yBAChB,kBAACI,EAAA,EAAUE,KAAX,KAAgB,uBAAGR,KAAK,gDAAgDC,OAAO,SAASC,IAAI,uBAA5E,8BAGpB,kBAACoB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,sBACA,kBAACjB,EAAA,EAAD,CAAWU,QAAQ,SACjB,kBAACV,EAAA,EAAUE,KAAX,KAAgB,uBAAGR,KAAK,oCAAoCC,OAAO,SAASC,IAAI,uBAAhE,4BAChB,kBAACI,EAAA,EAAUE,KAAX,KAAgB,uBAAGR,KAAK,uCAAuCC,OAAO,SAASC,IAAI,uBAAnE,+BAChB,kBAACI,EAAA,EAAUE,KAAX,KAAgB,uBAAGR,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAjE,8B,GAtEZsB,IAAMC,WCVJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCENC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2272053a.chunk.js","sourcesContent":["/*********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Card from 'react-bootstrap/Card';\n\ndeclare var awsExports;\n//import awsExports from './aws-exports';\n\nclass App extends React.Component {\n  state = {\n    url: null,\n    playing: false,\n    stream: \"STREAM\"\n  }\n\n  load = (url,stream) => {\n    this.setState({\n      url:url,\n      stream:stream,\n      played: 0,\n      playing: true\n    })\n  }\n\n  ref = player => {\n    this.player = player\n  }\n\n  render() {\n    const { url, stream, playing } = this.state\n  \n    return (\n      <div className=\"main\">\n        <h1>Live Streaming on AWS</h1>\n        <p>\n          This demo provides a preview player for the HLS, DASH and CMAF CloudFront endpoints created by the <a href=\"https://aws.amazon.com/solutions/implementations/live-streaming-on-aws/?did=sl_card&trk=sl_card\" target=\"_blank\" rel=\"noopener noreferrer\">Live Stream on AWS solution</a>.  \n\t\t\t  </p>\n\n        <div className='player-wrapper'>\n        <ReactPlayer\n          ref={this.ref}\n          className='react-player'\n          url={url}\n          playing={playing}\n          controls\n          width='100%'\n          height='100%'\n        />\n        </div>\n        \n        <ListGroup horizontal>\n          <ListGroup.Item><b>{stream}</b></ListGroup.Item>\n          <ListGroup.Item className=\"url\"><span>{ url }</span></ListGroup.Item>\n        </ListGroup>\n\n        <p>\n        <strong>IMPORTANT!</strong> First login to the <a id=\"live\" href={awsExports.mediaLiveConsole} target=\"_blank\" rel=\"noopener noreferrer\">Medialive Console</a> and\n         check the live channel is running.\n        </p>\n\n        <Button onClick={() => this.load(awsExports.hls_manifest,\"HLS\")} className=\"perview\" size=\"sm\" variant=\"success\">Preview HLS</Button>\n        <Button onClick={() => this.load(awsExports.dash_manifest,\"DASH\")} className=\"perview\" size=\"sm\" variant=\"success\">Preview DASH</Button>\n        <Button onClick={() => this.load(awsExports.cmaf_manifest,\"CMAF\")} className=\"perview\" size=\"sm\" variant=\"success\">Preview CMAF</Button>\n        \n        <CardDeck style={{ margin: '4rem auto'}}>\n          <Card>\n            <Card.Header>Resources</Card.Header>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item><a href=\"https://aws.amazon.com/answers/media-entertainment/live-streaming/\" target=\"_blank\" rel=\"noopener noreferrer\">Solution Landing page</a></ListGroup.Item>\n              <ListGroup.Item><a href=\"https://docs.aws.amazon.com/solutions/latest/live-streaming/welcome.html\" target=\"_blank\" rel=\"noopener noreferrer\">Implementation Guide</a></ListGroup.Item>\n              <ListGroup.Item><a href=\"https://github.com/awslabs/live-stream-on-aws\" target=\"_blank\" rel=\"noopener noreferrer\">Source Code on AWS Labs</a></ListGroup.Item>\n            </ListGroup>\n          </Card>\n          <Card>\n            <Card.Header>Documentation</Card.Header>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item><a href=\"https://aws.amazon.com/medialive/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Elemental MediaLive</a></ListGroup.Item>\n              <ListGroup.Item><a href=\"https://aws.amazon.com/mediapackage/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Elemental MediaPackage</a></ListGroup.Item>\n              <ListGroup.Item><a href=\"https://aws.amazon.com/cloudfront/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon CloudFront</a></ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </CardDeck>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*********************************************************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *\n *                                                                                                                    *\n *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance    *\n *  with the License. A copy of the License is located at                                                             *\n *                                                                                                                    *\n *      http://www.apache.org/licenses/LICENSE-2.0                                                                    *\n *                                                                                                                    *\n *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *\n *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *\n *  and limitations under the License.                                                                                *\n *********************************************************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}